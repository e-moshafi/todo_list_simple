function show_password(inputname = ".password", btnname = "#show-password") {
    //get password input type
    if ($(inputname).attr('type') == 'password') {
        ///change password input type
        $(inputname).attr('type', 'text');
        //chnage icon password shwo
        $(btnname).html('<i style="font-size:23px" class="fa fa-eye"></i')
    } else {
        ///change password input type

        $(inputname).attr('type', 'password');
        //chnage icon password shwo

        $(btnname).html('<i style="font-size:23px" class="fa fa-eye-slash"></i')
    }
}
//modal show and hidden
function modal_show(divname) {
    // check class name and chnage 
    if ($(divname).hasClass('active')) {
        $(divname).removeClass('active');
        $(divname).addClass('deactivate');
    } else if ($(divname).hasClass('deactivate')) {
        $(divname).removeClass('deactivate');
        $(divname).addClass('active');
    }
}
function calendars(divid, url) {
    var clanderIE = document.getElementById(divid);
    var events_data;
    $.ajax({
        url: url + 'ajax.php',
        method: 'POST',
        async: false,
        success: function (data) {
            events_data = data;
            console.log(events_data);
        }
    });
    var calendar = new FullCalendar.Calendar(clanderIE, {
        editable: true,
        nextDayThreshold: '23:59',
        allday: false,
        themeSystem: 'bootstrap',
        headerToolbar: {
            left: 'prev,next today',
            center: 'title',
            right: 'dayGridMonth,timeGridWeek,timeGridDay'
        },
        selectable: true,
        select: function (info) {
            modal_show('.program-form-submit');
            $(".program-form-submit").find('#start-date').val(info.startStr);
            $(".program-form-submit").find('#end-date').val(info.endStr);
        },
        events: JSON.parse(events_data),
        eventDrop: function (info) {
            //add one day for fixed start event toISOString 
            var start = new Date(info.event.start.toISOString());
            start.setDate(start.getDate() + parseInt(1));
            //add one day for fixed end event toISOString 
            var end = new Date(info.event.end.toISOString());
            end.setDate(end.getDate() + parseInt(1));
            //update event      
            $.ajax({
                url: url + 'ajax.php',
                method: 'POST',
                data: {
                    id: info.event.id,
                    update_event: "date",
                    start_date: start.toISOString().substring(0, 10),
                    end_date: end.toISOString().substring(0, 10)
                },
                success: function (data) {
                    console.log(data);
                }
            });
        },
        eventResizableFromStart: true,
        eventResize: function (info) {
            //add one day for fixed start event toISOString 
            var start = new Date(info.event.start.toISOString());
            start.setDate(start.getDate() + parseInt(1));
            //add one day for fixed end event toISOString 
            var end = new Date(info.event.end.toISOString());
            end.setDate(end.getDate() + parseInt(1));
            //update event      
            $.ajax({
                url: url + 'ajax.php',
                method: 'POST',
                data: {
                    id: info.event.id,
                    update_event: "date",
                    start_date: start.toISOString().substring(0, 10),
                    end_date: end.toISOString().substring(0, 10)
                },
                success: function (data) {
                    console.log(data);
                    console.log(end.toISOString().substring(0, 10))
                }
            });
        },
        eventClick: function (info) {
            $.ajax({
                url: url + 'ajax.php',
                method: 'POST',
                data: {
                    id: info.event.id,
                    update_form: "form",
                },
                success: function (data) {
                    modal_show('.program-form-update');
                    $('.program-form-update-show').html(data);
                }
            });
        }

    });
    calendar.render();
}
function form_send(formname, url, subbtn = "submit-btn") {
    $.ajax({
        url: url + 'ajax.php',
        method: 'POST',
        data: new FormData($(formname)[0]),
        contentType: false,
        cache: false,
        processData: false,
        beforeSend: function () {
            document.getElementById(subbtn).innerHTML = '<div class="spinner-border" role="status"><span class="sr-only">Loading...</span></div> ';
        },
        success: function (response) {
            document.getElementById(subbtn).innerHTML = 'submit';
            console.log(response);
            calendars('calendar-program', url);

        }
    });
}
function delete_event(id, url, subbtn = "delete-event-btn") {
    $.ajax({
        url: url + 'ajax.php',
        method: 'POST',
        data: {
            delete_event: id
        },
        beforeSend: function () {
            document.getElementById(subbtn).innerHTML = '<div class="spinner-border" role="status"><span class="sr-only">Loading...</span></div> ';
        },
        success: function (response) {
            document.getElementById(subbtn).innerHTML = 'delete';
            console.log(response);
            calendars('calendar-program', url);

        }
    });
}
function preview_show(outputid, display = false) {
    var output = document.getElementById(outputid);
    output.src = URL.createObjectURL(event.target.files[0]);
    output.onload = function () {
        URL.revokeObjectURL(output.src); // free memory
        if (display === true) {
            output.style.display = "block";
        }
    }

}